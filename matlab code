% Define parameters
D = 2e-9;           % Diffusion coefficient of the dissolved substance
L = 0.01;           % Length of the domain
N = 100;            % Number of grid points
dx = L/N;           % Grid spacing
C0 = 10;            % Concentration of the dissolved substance in the tablet
h = 0.001;          % Height of the tablet
w = 0.005;          % Width of the tablet
x0 = 0.005;         % x-coordinate of the center of the tablet
y0 = 0.01;          % y-coordinate of the center of the tablet
R = 0.001;          % Radius of the tablet (assumed circular)
v = 0.002;          % Velocity of the tablet
t_end = (L-y0)/v;   % End time of simulation
dt = 0.1*dx/v;      % Time step
rho_fluid = 1000;   % Density of the liquid
rho_tablet = 2000;  % Density of the tablet

% Initialize concentration and density matrices
C = zeros(N,N);
rho = rho_fluid*ones(N,N);

% Initialize plot
figure;
ax = axes;
hold(ax, 'on');
title('Tablet Diffusion');
xlabel('x (m)');
ylabel('y (m)');

% Create grid of x- and y-coordinates
x = linspace(0,L,N);
y = linspace(0,L,N);
[X,Y] = meshgrid(x,y);

% Set initial concentration and density
C((Y - y0).^2 + (X - x0).^2 <= R^2) = C0;
rho((Y - y0).^2 + (X - x0).^2 <= R^2) = rho_tablet;

% Plot initial state
h_plot = surf(ax, x, y, C);
set(h_plot, 'ZDataSource', 'C');
set(h_plot, 'EdgeColor', 'none');
colorbar;

% Simulate diffusion and advection
for t = dt:dt:t_end
    % Update tablet position
    y0 = y0 + v*dt;
    
    % Compute concentration and density at next time step
    C_new = C + D*dt/dx^2*(circshift(C, [0 -1]) + circshift(C, [0 1]) + circshift(C, [-1 0]) + circshift(C, [1 0]) - 4*C);
    rho_new = rho_fluid*ones(N,N) + rho_tablet/rho_fluid*(rho - rho_fluid) + ...
              v*dt/dx*(circshift(rho, [0 -1]) - rho) + ...
              D*dt/dx^2*(circshift(rho, [0 -1]) + circshift(rho, [0 1]) + circshift(rho, [-1 0]) + circshift(rho, [1 0]) - 4*rho);
    
    % Apply boundary conditions for concentration (no flux)
    C_new(1,:) = C_new(2,:);
    C_new(end,:) = C_new(end-1,:);
    C_new(:,1) = C_new(:,2);
    C_new(:,end) = C_new(:,end-1);
    
    % Apply boundary conditions for density (no flux at top and bottom, free surface at sides)
    rho_new(1,:) = rho_new(2,:);
    rho_new(end,:) = rho_new(end-1,:);
        rho_new(:,1) = rho_new(:,2);
    rho_new(:,end) = rho_new(:,end-1);
    
    % Update concentration and density matrices
    C = C_new;
    rho = rho_new;
    
    % Update plot data
    refreshdata(h_plot, 'caller');
    drawnow;
end
